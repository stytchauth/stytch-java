name: Publish

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  publish:
    name: Release build and publish
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: zulu
          java-version: 11

      - name: Get version
        id: version
        run: |
          VERSION=$(./gradlew -q printVersion)
          echo "release_tag=$VERSION" >> $GITHUB_OUTPUT

      - name: Get changed files
        id: files
        uses: jitterbit/get-changed-files@v1

      - name: Check for version.gradle.kts diff
        id: diff
        run: |
          FOUND=0
          for changed_file in ${{ steps.files.outputs.all }}; do
            if [[ $changed_file == "version.gradle.kts" ]]; then
              FOUND=1
            fi
          done
          echo "diff=$FOUND" >> $GITHUB_OUTPUT
      - name: Clean
        if: steps.diff.outputs.diff != 0 || ${{ github.event_name == 'workflow_dispatch' }}
        run: ./gradlew clean

      - name: Release build
        if: steps.diff.outputs.diff != 0 || ${{ github.event_name == 'workflow_dispatch' }}
        run: ./gradlew assemble

      - name: Source jar
        if: steps.diff.outputs.diff != 0 || ${{ github.event_name == 'workflow_dispatch' }}
        run: ./gradlew kotlinSourcesJar

      - name: Publish
        if: steps.diff.outputs.diff != 0 || ${{ github.event_name == 'workflow_dispatch' }}
        run: ./gradlew publish

      - name: Deploy
        if: steps.diff.outputs.diff != 0 || ${{ github.event_name == 'workflow_dispatch' }}
        run: ./gradlew jreleaserDeploy
        env:
          JRELEASER_MAVENCENTRAL_USERNAME: ${{ secrets.JRELEASER_MAVENCENTRAL_USERNAME }}
          JRELEASER_MAVENCENTRAL_PASSWORD: ${{ secrets.JRELEASER_MAVENCENTRAL_PASSWORD }}
          JRELEASER_GPG_PASSPHRASE: ${{ secrets.JRELEASER_GPG_PASSPHRASE }}
          JRELEASER_GPG_SECRET_KEY: ${{ secrets.JRELEASER_GPG_SECRET_KEY }}
          JRELEASER_GPG_PUBLIC_KEY: ${{ secrets.JRELEASER_GPG_PUBLIC_KEY }}

      - name: Create release
        if: steps.diff.outputs.diff != 0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release create "${{ steps.version.outputs.release_tag }}" --generate-notes
