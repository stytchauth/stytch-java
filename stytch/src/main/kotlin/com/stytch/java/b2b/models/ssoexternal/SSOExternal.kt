package com.stytch.java.b2b.models.ssoexternal

// !!!
// WARNING: This file is autogenerated
// Only modify code within MANUAL() sections
// or your changes may be overwritten later!
// !!!

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass
import com.stytch.java.b2b.models.sso.Connection
import com.stytch.java.b2b.models.sso.ConnectionImplicitRoleAssignment
import com.stytch.java.b2b.models.sso.GroupImplicitRoleAssignment
import com.stytch.java.b2b.models.sso.SAMLConnectionImplicitRoleAssignment
import com.stytch.java.b2b.models.sso.SAMLGroupImplicitRoleAssignment
import com.stytch.java.common.methodoptions.Authorization

public data class CreateConnectionRequestOptions
    @JvmOverloads
    constructor(
        /**
         * Optional authorization object.
         * Pass in an active Stytch Member session token or session JWT and the request
         * will be run using that member's permissions.
         */
        val authorization: Authorization? = null,
    ) {
        internal fun addHeaders(headers: Map<String, String> = emptyMap()): Map<String, String> {
            var res = mapOf<String, String>()
            if (authorization != null) {
                res = authorization.addHeaders(res)
            }
            return res + headers
        }
    }

public data class UpdateConnectionRequestOptions
    @JvmOverloads
    constructor(
        /**
         * Optional authorization object.
         * Pass in an active Stytch Member session token or session JWT and the request
         * will be run using that member's permissions.
         */
        val authorization: Authorization? = null,
    ) {
        internal fun addHeaders(headers: Map<String, String> = emptyMap()): Map<String, String> {
            var res = mapOf<String, String>()
            if (authorization != null) {
                res = authorization.addHeaders(res)
            }
            return res + headers
        }
    }

@JsonClass(generateAdapter = true)
public data class CreateConnectionRequest
    @JvmOverloads
    constructor(
        @Json(name = "organization_id")
        val organizationId: String,
        @Json(name = "external_organization_id")
        val externalOrganizationId: String,
        @Json(name = "external_connection_id")
        val externalConnectionId: String,
        @Json(name = "display_name")
        val displayName: String? = null,
        @Json(name = "connection_implicit_role_assignments")
        val connectionImplicitRoleAssignments: List<SAMLConnectionImplicitRoleAssignment>? = emptyList(),
        @Json(name = "group_implicit_role_assignments")
        val groupImplicitRoleAssignments: List<SAMLGroupImplicitRoleAssignment>? = emptyList(),
    )

@JsonClass(generateAdapter = true)
public data class CreateConnectionResponse
    @JvmOverloads
    constructor(
        @Json(name = "request_id")
        val requestId: String,
        @Json(name = "status_code")
        val statusCode: Int,
        @Json(name = "connection")
        val connection: Connection? = null,
    )

@JsonClass(generateAdapter = true)
public data class UpdateConnectionRequest
    @JvmOverloads
    constructor(
        @Json(name = "organization_id")
        val organizationId: String,
        @Json(name = "connection_id")
        val connectionId: String,
        @Json(name = "display_name")
        val displayName: String? = null,
        @Json(name = "external_connection_implicit_role_assignments")
        val externalConnectionImplicitRoleAssignments: List<ConnectionImplicitRoleAssignment>? = emptyList(),
        @Json(name = "external_group_implicit_role_assignments")
        val externalGroupImplicitRoleAssignments: List<GroupImplicitRoleAssignment>? = emptyList(),
    )

@JsonClass(generateAdapter = true)
public data class UpdateConnectionResponse
    @JvmOverloads
    constructor(
        @Json(name = "request_id")
        val requestId: String,
        @Json(name = "status_code")
        val statusCode: Int,
        @Json(name = "connection")
        val connection: Connection? = null,
    )
