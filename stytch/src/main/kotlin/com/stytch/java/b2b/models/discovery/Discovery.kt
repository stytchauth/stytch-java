package com.stytch.java.b2b.models.discovery

// !!!
// WARNING: This file is autogenerated
// Only modify code within MANUAL() sections
// or your changes may be overwritten later!
// !!!

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass
import com.stytch.java.b2b.models.mfa.MfaRequired
import com.stytch.java.b2b.models.organizations.Member
import com.stytch.java.b2b.models.organizations.Organization

@JsonClass(generateAdapter = true)
public data class DiscoveredOrganization @JvmOverloads constructor(
    /**
     * Indicates whether the Member has all of the factors needed to fully authenticate to this Organization. If false, the
     * Member may need to complete an MFA step or complete a different primary authentication flow. See the `primary_required`
     * and `mfa_required` fields for more details on each.
     */
    @Json(name = "member_authenticated")
    val memberAuthenticated: Boolean,
    /**
     * The [Organization object](https://stytch.com/docs/b2b/api/organization-object).
     */
    @Json(name = "organization")
    val organization: Organization? = null,
    /**
     * Information about the membership.
     */
    @Json(name = "membership")
    val membership: Membership? = null,
    /**
     * Information about the primary authentication requirements of the Organization.
     */
    @Json(name = "primary_required")
    val primaryRequired: PrimaryRequired? = null,
    /**
     * Information about the MFA requirements of the Organization and the Member's options for fulfilling MFA.
     */
    @Json(name = "mfa_required")
    val mfaRequired: MfaRequired? = null,
)

@JsonClass(generateAdapter = true)
public data class Membership @JvmOverloads constructor(
    /**
     * Either `active_member`, `pending_member`, `invited_member`, or `eligible_to_join_by_email_domain`
     */
    @Json(name = "type")
    val type: String,
    /**
     * An object containing additional metadata about the membership, if available.
     */
    @Json(name = "details")
    val details: Map<String, Any>? = null,
    /**
     * The [Member object](https://stytch.com/docs/b2b/api/member-object) if one already exists, or null if one does not.
     */
    @Json(name = "member")
    val member: Member? = null,
)

@JsonClass(generateAdapter = true)
public data class PrimaryRequired @JvmOverloads constructor(
    /**
     * If non-empty, indicates that the Organization restricts the authentication methods it allows for login (such as `sso`
     * or `password`), and the end user must complete one of those authentication methods to log in. If empty, indicates that
     * the Organization does not restrict the authentication method it allows for login, but the end user does not have any
     * transferrable primary factors. Only email magic link and OAuth factors can be transferred between Organizations.
     */
    @Json(name = "allowed_auth_methods")
    val allowedAuthMethods: List<String>,
)
