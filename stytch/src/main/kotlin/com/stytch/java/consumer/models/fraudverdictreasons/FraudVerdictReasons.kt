package com.stytch.java.consumer.models.fraudverdictreasons

// !!!
// WARNING: This file is autogenerated
// Only modify code within MANUAL() sections
// or your changes may be overwritten later!
// !!!

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass
import com.stytch.java.consumer.models.fraud.VerdictReasonAction

@JsonClass(generateAdapter = false)
public enum class OverrideRequestAction {
    @Json(name = "ALLOW")
    ALLOW,

    @Json(name = "CHALLENGE")
    CHALLENGE,

    @Json(name = "BLOCK")
    BLOCK,

    @Json(name = "NONE")
    NONE,
}

/**
* Request type for `VerdictReasons.list`.
*/
@JsonClass(generateAdapter = true)
public data class ListRequest
    @JvmOverloads
    constructor(
        /**
         * Whether to return only verdict reasons that have overrides set. Defaults to false.
         */
        @Json(name = "overrides_only")
        val overridesOnly: Boolean? = null,
    )

/**
* Response type for `VerdictReasons.list`.
*/
@JsonClass(generateAdapter = true)
public data class ListResponse
    @JvmOverloads
    constructor(
        /**
         * Globally unique UUID that is returned with every API call. This value is important to log for debugging purposes; we
         * may ask for this value to help identify a specific API call when helping you debug an issue.
         */
        @Json(name = "request_id")
        val requestId: String,
        /**
         * Information about verdict reasons and any overrides that were set on them.
         */
        @Json(name = "verdict_reason_actions")
        val verdictReasonActions: List<VerdictReasonAction>,
        /**
         * The HTTP status code of the response. Stytch follows standard HTTP response status code patterns, e.g. 2XX values
         * equate to success, 3XX values are redirects, 4XX are client errors, and 5XX are server errors.
         */
        @Json(name = "status_code")
        val statusCode: Int,
    )

/**
* Request type for `VerdictReasons.override`.
*/
@JsonClass(generateAdapter = true)
public data class OverrideRequest
    @JvmOverloads
    constructor(
        /**
         * The verdict reason that you wish to override. For a list of possible reasons to override, see
         * [Warning Flags (Verdict Reasons)](https://stytch.com/docs/docs/fraud/guides/device-fingerprinting/reference/warning-flags-verdict-reasons). You may not override the `RULE_MATCH` reason.
         */
        @Json(name = "verdict_reason")
        val verdictReason: String,
        /**
         * The action that you want to be returned for the specified verdict reason. The override action must be one of `ALLOW`,
         * `BLOCK`, or `CHALLENGE`.
         */
        @Json(name = "override_action")
        val overrideAction: OverrideRequestAction,
        /**
         * An optional description for the verdict reason override.
         */
        @Json(name = "override_description")
        val overrideDescription: String? = null,
    )

/**
* Response type for `VerdictReasons.override`.
*/
@JsonClass(generateAdapter = true)
public data class OverrideResponse
    @JvmOverloads
    constructor(
        /**
         * Globally unique UUID that is returned with every API call. This value is important to log for debugging purposes; we
         * may ask for this value to help identify a specific API call when helping you debug an issue.
         */
        @Json(name = "request_id")
        val requestId: String,
        /**
         * Information about the verdict reason override that was just set.
         */
        @Json(name = "verdict_reason_action")
        val verdictReasonAction: VerdictReasonAction,
        /**
         * The HTTP status code of the response. Stytch follows standard HTTP response status code patterns, e.g. 2XX values
         * equate to success, 3XX values are redirects, 4XX are client errors, and 5XX are server errors.
         */
        @Json(name = "status_code")
        val statusCode: Int,
    )
