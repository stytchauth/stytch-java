package com.stytch.java.consumer.models.connectedappsclients

// !!!
// WARNING: This file is autogenerated
// Only modify code within MANUAL() sections
// or your changes may be overwritten later!
// !!!

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass
import com.stytch.java.consumer.models.connectedapps.ConnectedApp
import com.stytch.java.consumer.models.connectedapps.ConnectedAppWithClientSecret
import com.stytch.java.consumer.models.connectedapps.ResultsMetadata

@JsonClass(generateAdapter = false)
public enum class CreateRequestClientType {
    @Json(name = "first_party")
    FIRST_PARTY,

    @Json(name = "first_party_public")
    FIRST_PARTY_PUBLIC,

    @Json(name = "third_party")
    THIRD_PARTY,

    @Json(name = "third_party_public")
    THIRD_PARTY_PUBLIC,
}

@JsonClass(generateAdapter = true)
public data class CreateRequest
    @JvmOverloads
    constructor(
        @Json(name = "client_type")
        val clientType: CreateRequestClientType,
        @Json(name = "redirect_urls")
        val redirectURLS: List<String>,
        @Json(name = "full_access_allowed")
        val fullAccessAllowed: Boolean,
        @Json(name = "post_logout_redirect_urls")
        val postLogoutRedirectURLS: List<String>,
        @Json(name = "client_name")
        val clientName: String? = null,
        @Json(name = "client_description")
        val clientDescription: String? = null,
        @Json(name = "access_token_expiry_minutes")
        val accessTokenExpiryMinutes: Int? = null,
        @Json(name = "access_token_custom_audience")
        val accessTokenCustomAudience: String? = null,
        @Json(name = "access_token_template_content")
        val accessTokenTemplateContent: String? = null,
        @Json(name = "logo_url")
        val logoURL: String? = null,
        @Json(name = "bypass_consent_for_offline_access")
        val bypassConsentForOfflineAccess: Boolean? = null,
    )

@JsonClass(generateAdapter = true)
public data class CreateResponse
    @JvmOverloads
    constructor(
        @Json(name = "request_id")
        val requestId: String,
        @Json(name = "connected_app")
        val connectedApp: ConnectedAppWithClientSecret,
        @Json(name = "status_code")
        val statusCode: Int,
    )

@JsonClass(generateAdapter = true)
public data class DeleteRequest
    @JvmOverloads
    constructor(
        @Json(name = "client_id")
        val clientId: String,
    )

@JsonClass(generateAdapter = true)
public data class DeleteResponse
    @JvmOverloads
    constructor(
        @Json(name = "request_id")
        val requestId: String,
        @Json(name = "client_id")
        val clientId: String,
        @Json(name = "status_code")
        val statusCode: Int,
    )

@JsonClass(generateAdapter = true)
public data class GetRequest
    @JvmOverloads
    constructor(
        @Json(name = "client_id")
        val clientId: String,
    )

@JsonClass(generateAdapter = true)
public data class GetResponse
    @JvmOverloads
    constructor(
        @Json(name = "request_id")
        val requestId: String,
        @Json(name = "connected_app")
        val connectedApp: ConnectedApp,
        @Json(name = "status_code")
        val statusCode: Int,
    )

@JsonClass(generateAdapter = true)
public data class SearchRequest
    @JvmOverloads
    constructor(
        @Json(name = "cursor")
        val cursor: String? = null,
        @Json(name = "limit")
        val limit: Long? = null,
    )

@JsonClass(generateAdapter = true)
public data class SearchResponse
    @JvmOverloads
    constructor(
        @Json(name = "request_id")
        val requestId: String,
        @Json(name = "connected_apps")
        val connectedApps: List<ConnectedApp>,
        @Json(name = "results_metadata")
        val resultsMetadata: ResultsMetadata,
        @Json(name = "status_code")
        val statusCode: Int,
    )

@JsonClass(generateAdapter = true)
public data class UpdateRequest
    @JvmOverloads
    constructor(
        @Json(name = "client_id")
        val clientId: String,
        @Json(name = "client_name")
        val clientName: String? = null,
        @Json(name = "client_description")
        val clientDescription: String? = null,
        @Json(name = "redirect_urls")
        val redirectURLS: List<String>? = emptyList(),
        @Json(name = "full_access_allowed")
        val fullAccessAllowed: Boolean? = null,
        @Json(name = "access_token_expiry_minutes")
        val accessTokenExpiryMinutes: Int? = null,
        @Json(name = "access_token_custom_audience")
        val accessTokenCustomAudience: String? = null,
        @Json(name = "access_token_template_content")
        val accessTokenTemplateContent: String? = null,
        @Json(name = "post_logout_redirect_urls")
        val postLogoutRedirectURLS: List<String>? = emptyList(),
        @Json(name = "logo_url")
        val logoURL: String? = null,
        @Json(name = "bypass_consent_for_offline_access")
        val bypassConsentForOfflineAccess: Boolean? = null,
    )

@JsonClass(generateAdapter = true)
public data class UpdateResponse
    @JvmOverloads
    constructor(
        @Json(name = "request_id")
        val requestId: String,
        @Json(name = "connected_app")
        val connectedApp: ConnectedApp,
        @Json(name = "status_code")
        val statusCode: Int,
    )
