package com.stytch.java.consumer.models.connectedapps

// !!!
// WARNING: This file is autogenerated
// Only modify code within MANUAL() sections
// or your changes may be overwritten later!
// !!!

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

@JsonClass(generateAdapter = true)
public data class ConnectedApp
    @JvmOverloads
    constructor(
        /**
         * The ID of the Connected App client.
         */
        @Json(name = "client_id")
        val clientId: String,
        /**
         * A human-readable name for the client.
         */
        @Json(name = "client_name")
        val clientName: String,
        /**
         * A human-readable description for the client.
         */
        @Json(name = "client_description")
        val clientDescription: String,
        @Json(name = "status")
        val status: String,
        /**
         * Valid for first party clients only. If `true`, an authorization token granted to this Client can be exchanged for a
         * full Stytch session.
         */
        @Json(name = "full_access_allowed")
        val fullAccessAllowed: Boolean,
        /**
         * The type of Connected App. Supported values are `first_party`, `first_party_public`, `third_party`, and
         * `third_party_public`.
         */
        @Json(name = "client_type")
        val clientType: String,
        /**
         * Array of redirect URI values for use in OAuth Authorization flows.
         */
        @Json(name = "redirect_urls")
        val redirectURLS: List<String>,
        @Json(name = "access_token_expiry_minutes")
        val accessTokenExpiryMinutes: Int,
        @Json(name = "access_token_template_content")
        val accessTokenTemplateContent: String,
        /**
         * Array of redirect URI values for use in OIDC Logout flows.
         */
        @Json(name = "post_logout_redirect_urls")
        val postLogoutRedirectURLS: List<String>,
        /**
         * Valid for first party clients only. If true, the client does not need to request explicit user consent for the
         * `offline_access` scope.
         */
        @Json(name = "bypass_consent_for_offline_access")
        val bypassConsentForOfflineAccess: Boolean,
        /**
         * The last four characters of the client secret.
         */
        @Json(name = "client_secret_last_four")
        val clientSecretLastFour: String? = null,
        /**
         * The last four characters of the `next_client_secret`. Null if no `next_client_secret` exists.
         */
        @Json(name = "next_client_secret_last_four")
        val nextClientSecretLastFour: String? = null,
        @Json(name = "access_token_custom_audience")
        val accessTokenCustomAudience: String? = null,
        /**
         * The logo URL of the Connected App, if any.
         */
        @Json(name = "logo_url")
        val logoURL: String? = null,
    )

@JsonClass(generateAdapter = true)
public data class ConnectedAppPublic
    @JvmOverloads
    constructor(
        @Json(name = "client_id")
        val clientId: String,
        @Json(name = "client_name")
        val clientName: String,
        @Json(name = "client_description")
        val clientDescription: String,
        @Json(name = "client_type")
        val clientType: String,
        @Json(name = "logo_url")
        val logoURL: String? = null,
    )

@JsonClass(generateAdapter = true)
public data class ConnectedAppWithClientSecret
    @JvmOverloads
    constructor(
        /**
         * The ID of the Connected App client.
         */
        @Json(name = "client_id")
        val clientId: String,
        /**
         * A human-readable name for the client.
         */
        @Json(name = "client_name")
        val clientName: String,
        /**
         * A human-readable description for the client.
         */
        @Json(name = "client_description")
        val clientDescription: String,
        @Json(name = "status")
        val status: String,
        /**
         * Valid for first party clients only. If `true`, an authorization token granted to this Client can be exchanged for a
         * full Stytch session.
         */
        @Json(name = "full_access_allowed")
        val fullAccessAllowed: Boolean,
        /**
         * The type of Connected App. Supported values are `first_party`, `first_party_public`, `third_party`, and
         * `third_party_public`.
         */
        @Json(name = "client_type")
        val clientType: String,
        /**
         * Array of redirect URI values for use in OAuth Authorization flows.
         */
        @Json(name = "redirect_urls")
        val redirectURLS: List<String>,
        @Json(name = "access_token_expiry_minutes")
        val accessTokenExpiryMinutes: Int,
        @Json(name = "access_token_template_content")
        val accessTokenTemplateContent: String,
        /**
         * Array of redirect URI values for use in OIDC Logout flows.
         */
        @Json(name = "post_logout_redirect_urls")
        val postLogoutRedirectURLS: List<String>,
        /**
         * Valid for first party clients only. If true, the client does not need to request explicit user consent for the
         * `offline_access` scope.
         */
        @Json(name = "bypass_consent_for_offline_access")
        val bypassConsentForOfflineAccess: Boolean,
        /**
         * The last four characters of the client secret.
         */
        @Json(name = "client_secret_last_four")
        val clientSecretLastFour: String? = null,
        /**
         * The last four characters of the `next_client_secret`. Null if no `next_client_secret` exists.
         */
        @Json(name = "next_client_secret_last_four")
        val nextClientSecretLastFour: String? = null,
        /**
         * The secret of the Connected App client. **Required for confidential clients**
         */
        @Json(name = "client_secret")
        val clientSecret: String? = null,
        @Json(name = "access_token_custom_audience")
        val accessTokenCustomAudience: String? = null,
        /**
         * The logo URL of the Connected App, if any.
         */
        @Json(name = "logo_url")
        val logoURL: String? = null,
    )

@JsonClass(generateAdapter = true)
public data class ConnectedAppWithNextClientSecret
    @JvmOverloads
    constructor(
        /**
         * The ID of the Connected App client.
         */
        @Json(name = "client_id")
        val clientId: String,
        /**
         * A human-readable name for the client.
         */
        @Json(name = "client_name")
        val clientName: String,
        /**
         * A human-readable description for the client.
         */
        @Json(name = "client_description")
        val clientDescription: String,
        @Json(name = "status")
        val status: String,
        /**
         * The last four characters of the client secret.
         */
        @Json(name = "client_secret_last_four")
        val clientSecretLastFour: String,
        /**
         * Valid for first party clients only. If `true`, an authorization token granted to this Client can be exchanged for a
         * full Stytch session.
         */
        @Json(name = "full_access_allowed")
        val fullAccessAllowed: Boolean,
        /**
         * The type of Connected App. Supported values are `first_party`, `first_party_public`, `third_party`, and
         * `third_party_public`.
         */
        @Json(name = "client_type")
        val clientType: String,
        /**
         * Array of redirect URI values for use in OAuth Authorization flows.
         */
        @Json(name = "redirect_urls")
        val redirectURLS: List<String>,
        @Json(name = "next_client_secret")
        val nextClientSecret: String,
        @Json(name = "access_token_expiry_minutes")
        val accessTokenExpiryMinutes: Int,
        @Json(name = "access_token_template_content")
        val accessTokenTemplateContent: String,
        /**
         * Array of redirect URI values for use in OIDC Logout flows.
         */
        @Json(name = "post_logout_redirect_urls")
        val postLogoutRedirectURLS: List<String>,
        /**
         * Valid for first party clients only. If true, the client does not need to request explicit user consent for the
         * `offline_access` scope.
         */
        @Json(name = "bypass_consent_for_offline_access")
        val bypassConsentForOfflineAccess: Boolean,
        /**
         * The last four characters of the `next_client_secret`. Null if no `next_client_secret` exists.
         */
        @Json(name = "next_client_secret_last_four")
        val nextClientSecretLastFour: String? = null,
        @Json(name = "access_token_custom_audience")
        val accessTokenCustomAudience: String? = null,
        /**
         * The logo URL of the Connected App, if any.
         */
        @Json(name = "logo_url")
        val logoURL: String? = null,
    )

@JsonClass(generateAdapter = true)
public data class ResultsMetadata
    @JvmOverloads
    constructor(
        /**
         * The total number of results returned by your search query. If totals have been disabled for your Stytch Workspace to
         * improve search performance, the value will always be -1.
         */
        @Json(name = "total")
        val total: Int,
        /**
         * The `next_cursor` string is returned when your search result contains more than one page of results. This value is
         * passed into your next search call in the `cursor` field.
         */
        @Json(name = "next_cursor")
        val nextCursor: String? = null,
    )
